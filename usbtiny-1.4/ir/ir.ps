%!PS-Adobe-3.0
%%Creator: gEDA gschem 20070626
%%CreationDate: Wed Jan 16 23:06:44 2008
%%Title: /tmp/release20810/usbtiny-1.4/ir/ir.sch
%%Author: (null)
%%BoundingBox: 0 0 612 792
%%Orientation: Portrait
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

% Show a string, with an overbar over it
% string charshow -
/charshow {
    drawoverbar {
	% draw an overbar for the character
	gsave
	fontsize 10.0 div setlinewidth
	0 fontsize rmoveto  % move to (0,overbarheight) 
	dup stringwidth pop 0 rlineto % draw line to 
	stroke
	grestore
    } if
    show
} bind def

/overbarshow {
    /drawoverbar false def      % start by not drawing overbars
    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		/drawoverbar drawoverbar not def
	    } {
		% otherwise render the character 
		(\\ ) dup 1 4 -1 roll put % draw a \ and the character
		charshow                      % render the string
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
		% no, reset flag and draw character
		( ) dup 0 4 -1 roll put	% create one character string
		charshow
	    } ifelse
	} ifelse
    } forall
} bind def
% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
386 3038 translate
0.796626 0.796626 scale
-54600 -52200 translate
gsave
58000 56200 57850 56200 10 line
57100 56200 57252 56200 10 line
57250 56100 57850 56100 10 line
57850 56100 57850 56300 10 line
57850 56300 57250 56300 10 line
57250 56300 57250 56100 10 line
grestore
gsave
false false false false 260.000000 [(68) ] 0 57475 56350 138.888885 text
grestore
gsave
58000 55400 57850 55400 10 line
57100 55400 57252 55400 10 line
57250 55300 57850 55300 10 line
57850 55300 57850 55500 10 line
57850 55500 57250 55500 10 line
57250 55500 57250 55300 10 line
grestore
gsave
false false false false 260.000000 [(68) ] 0 57475 55550 138.888885 text
grestore
gsave
57100 55800 57250 55800 10 line
58000 55800 57848 55800 10 line
57250 55700 57850 55700 10 line
57850 55700 57850 55900 10 line
57850 55900 57250 55900 10 line
57250 55900 57250 55700 10 line
grestore
gsave
false false false false 260.000000 [(1K5) ] 0 57450 55950 138.888885 text
grestore
60100 53500 60100 53700 10 line
gsave
false false false false 208.000000 [(1) ] 0 60150 53600 111.111115 text
grestore
gsave
true false false false 208.000000 [(Reset) ] 0 60100 53850 111.111115 text
grestore
59908 53974 60292 53974 10 line
60100 53750 50 0 360 10 darc
59400 53500 59400 53800 10 line
gsave
false false false false 208.000000 [(4) ] 0 59450 53600 111.111115 text
grestore
gsave
true false false false 208.000000 [(XTAL2) ] 0 59400 53850 111.111115 text
grestore
58700 53500 58700 53800 10 line
gsave
false false false false 208.000000 [(5) ] 0 58750 53600 111.111115 text
grestore
gsave
true false false false 208.000000 [(XTAL1) ] 0 58700 53850 111.111115 text
grestore
58100 54600 58400 54600 10 line
gsave
false true false false 208.000000 [(11) ] 0 58300 54650 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD6 \(ICP\)) ] 0 58450 54600 111.111115 text
grestore
58100 55000 58400 55000 10 line
gsave
false true false false 208.000000 [(9) ] 0 58300 55050 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD5 \(T1\)) ] 0 58450 55000 111.111115 text
grestore
58100 55400 58400 55400 10 line
gsave
false true false false 208.000000 [(8) ] 0 58300 55450 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD4 \(T0\)) ] 0 58450 55400 111.111115 text
grestore
58100 55800 58400 55800 10 line
gsave
false true false false 208.000000 [(7) ] 0 58300 55850 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD3 \(INT1\)) ] 0 58450 55800 111.111115 text
grestore
58100 56200 58400 56200 10 line
gsave
false true false false 208.000000 [(6) ] 0 58300 56250 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD2 \(INT0\)) ] 0 58450 56200 111.111115 text
grestore
58100 56600 58400 56600 10 line
gsave
false true false false 208.000000 [(3) ] 0 58300 56650 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD1 \(TXD\)) ] 0 58450 56600 111.111115 text
grestore
58100 57000 58400 57000 10 line
gsave
false true false false 208.000000 [(2) ] 0 58300 57050 111.111115 text
grestore
gsave
false false false false 208.000000 [(PD0 \(RXD\)) ] 0 58450 57000 111.111115 text
grestore
60700 54200 60400 54200 10 line
gsave
false false false false 208.000000 [(19) ] 0 60500 54250 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(SCK\) PB7) ] 0 60350 54200 111.111115 text
grestore
60700 54600 60400 54600 10 line
gsave
false false false false 208.000000 [(18) ] 0 60500 54650 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(MISO\) PB6) ] 0 60350 54600 111.111115 text
grestore
60700 55000 60400 55000 10 line
gsave
false false false false 208.000000 [(17) ] 0 60500 55050 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(MOSI\) PB5) ] 0 60350 55000 111.111115 text
grestore
60700 55400 60400 55400 10 line
gsave
false false false false 208.000000 [(16) ] 0 60500 55450 111.111115 text
grestore
gsave
false true false false 208.000000 [(PB4) ] 0 60350 55400 111.111115 text
grestore
60700 55800 60400 55800 10 line
gsave
false false false false 208.000000 [(15) ] 0 60500 55850 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(OC1\) PB3) ] 0 60350 55800 111.111115 text
grestore
60700 56200 60400 56200 10 line
gsave
false false false false 208.000000 [(14) ] 0 60500 56250 111.111115 text
grestore
gsave
false true false false 208.000000 [(PB2) ] 0 60350 56200 111.111115 text
grestore
60700 56600 60400 56600 10 line
gsave
false false false false 208.000000 [(13) ] 0 60500 56650 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(AIN1\) PB1) ] 0 60350 56600 111.111115 text
grestore
60700 57000 60400 57000 10 line
gsave
false false false false 208.000000 [(12) ] 0 60500 57050 111.111115 text
grestore
gsave
false true false false 208.000000 [(\(AIN0\) PB0) ] 0 60350 57000 111.111115 text
grestore
58400 53800 60400 53800 10 line
60400 53800 60400 57400 10 line
60400 57400 58400 57400 10 line
58400 57400 58400 53800 10 line
gsave
false false false false 260.000000 [(ATtiny2313) ] 0 58400 57450 138.888885 text
grestore
gsave
56000 55100 56300 55100 10 line
gsave
false false false false 208.000000 [(3) ] 0 54850 55050 111.111115 text
grestore
56000 55400 56300 55400 10 line
gsave
false false false false 208.000000 [(2) ] 0 54850 55350 111.111115 text
grestore
56000 54800 56300 54800 10 line
gsave
false false false false 208.000000 [(4) ] 0 54850 54750 111.111115 text
grestore
56000 55400 55100 55400 10 line
56000 55100 55100 55100 10 line
56000 54800 55100 54800 10 line
56000 55700 56300 55700 10 line
gsave
false false false false 208.000000 [(1) ] 0 54850 55650 111.111115 text
grestore
56000 55700 55100 55700 10 line
54600 54600 55100 54600 10 line
55100 54600 55100 55900 10 line
55100 55900 54600 55900 10 line
54600 55900 54600 54600 10 line
grestore
gsave
false false false false 260.000000 [(USB) ] 0 54600 56000 138.888885 text
grestore
57000 55100 57000 56200 10 line
58700 53500 58700 53400 10 line
59400 53500 59400 53400 10 line
gsave
false true false false 260.000000 [(IR receiver and LCD controller with USB interface) ] 0 64300 52200 138.888885 text
grestore
gsave
false false false false 260.000000 [(Vcc) ] 0 55200 55800 138.888885 text
grestore
gsave
false false false false 260.000000 [(D-) ] 0 55200 55500 138.888885 text
grestore
gsave
false false false false 260.000000 [(D+) ] 0 55200 55200 138.888885 text
grestore
gsave
false false false false 260.000000 [(GND) ] 0 55200 54900 138.888885 text
grestore
gsave
58700 53400 58900 53400 10 line
59200 53400 59400 53400 10 line
58950 53300 59150 53300 10 line
59150 53300 59150 53500 10 line
59150 53500 58950 53500 10 line
58950 53500 58950 53300 10 line
58900 53540 58900 53260 10 line
59200 53540 59200 53260 10 line
grestore
gsave
false false false false 260.000000 [(12MHz) ] 0 58750 53100 138.888885 text
grestore
gsave
60100 53400 60100 53200 10 line
gsave
false false false false 208.000000 [(1) ] 90 60050 53250 111.111115 text
grestore
60100 52500 60100 52700 10 line
gsave
false true false false 208.000000 [(2) ] 90 60050 52650 111.111115 text
grestore
59900 52850 60300 52850 10 line
60100 52700 60100 52850 10 line
60100 53050 60100 53200 10 line
59900 53161 60000 53161 10 line
59951 53110 59951 53210 10 line
59900 52950 60300 52950 10 line
60300 52950 60300 53050 10 line
60300 53050 59900 53050 10 line
59900 53050 59900 52950 10 line
newpath
60100 52500
30
0 360 arc
fill
newpath
60100 52500
30
0 360 arc
fill
grestore
gsave
false true false false 260.000000 [(1uF) ] 0 60400 52700 138.888885 text
grestore
gsave
56300 52300 56300 52500 10 line
56200 52300 56400 52300 10 line
56255 52250 56345 52250 10 line
56280 52210 56320 52210 10 line
grestore
gsave
59400 52500 59400 52700 10 line
59400 53400 59400 53200 10 line
59200 52900 59600 52900 10 line
59200 53000 59600 53000 10 line
59400 53200 59400 53000 10 line
59400 52900 59400 52700 10 line
newpath
59400 52500
30
0 360 arc
fill
newpath
59400 52500
30
0 360 arc
fill
grestore
gsave
false true false true 260.000000 [(27pF) ] 0 59900 52800 138.888885 text
grestore
gsave
58700 52500 58700 52700 10 line
58700 53400 58700 53200 10 line
58500 52900 58900 52900 10 line
58500 53000 58900 53000 10 line
58700 53200 58700 53000 10 line
58700 52900 58700 52700 10 line
newpath
58700 52500
30
0 360 arc
fill
newpath
58700 52500
30
0 360 arc
fill
grestore
gsave
false true false true 260.000000 [(27pF) ] 0 59200 52800 138.888885 text
grestore
gsave
58000 53400 58000 53200 10 line
58000 52500 58000 52700 10 line
58100 53000 58000 52900 10 line
58000 52900 57900 53000 10 line
58100 53000 57900 53000 10 line
58100 52900 57900 52900 10 line
58000 52900 58000 52700 10 line
58000 53000 58000 53200 10 line
58140 52970 58240 52870 10 line
58240 52870 58210 52920 10 line
58240 52870 58190 52900 10 line
58140 52900 58240 52800 10 line
58240 52800 58210 52850 10 line
58240 52800 58190 52830 10 line
newpath
58000 52500
30
0 360 arc
fill
newpath
58000 52500
30
0 360 arc
fill
grestore
gsave
58000 53450 58000 53600 10 line
58000 54350 58000 54198 10 line
57900 53600 58100 53600 10 line
58100 53600 58100 54200 10 line
58100 54200 57900 54200 10 line
57900 54200 57900 53600 10 line
grestore
gsave
false true false true 260.000000 [(330) ] 0 58000 54350 138.888885 text
grestore
gsave
60600 53750 50 0 360 10 darc
60600 53700 60600 53400 10 line
gsave
false false false false 260.000000 [(Vcc) ] 0 60400 53850 138.888885 text
grestore
grestore
56400 57300 57400 57300 10 line
57400 57300 57400 57900 10 line
56400 57900 56400 57300 10 line
57300 57300 57300 57000 10 line
gsave
false false false false 208.000000 [(3) ] 0 57350 57150 111.111115 text
grestore
56800 57300 56800 57000 10 line
gsave
false false false false 208.000000 [(2) ] 0 56850 57150 111.111115 text
grestore
56500 57300 56500 57000 10 line
gsave
false false false false 208.000000 [(1) ] 0 56550 57150 111.111115 text
grestore
gsave
false false false false 208.000000 [(TSOP1738) ] 0 56525 57550 111.111115 text
grestore
56400 57900 57400 57900 10 line
60700 57000 61400 57000 10 line
61400 57000 61400 54400 10 line
61400 54400 62200 54400 10 line
60700 56600 61200 56600 10 line
61200 56600 61200 54100 10 line
61200 54100 62200 54100 10 line
60700 56200 61000 56200 10 line
61000 56200 61000 53800 10 line
61000 53800 62200 53800 10 line
60700 55800 60800 55800 10 line
60800 53500 62200 53500 10 line
62200 56500 61600 56500 10 line
61600 56500 61600 55400 10 line
61600 55400 60700 55400 10 line
62200 56200 61800 56200 10 line
61800 56200 61800 55000 10 line
61800 55000 60700 55000 10 line
60700 54600 62000 54600 10 line
62000 54600 62000 55900 10 line
62000 55900 62200 55900 10 line
56300 55400 57100 55400 10 line
60100 53500 60100 53400 10 line
62500 52600 64300 52600 10 line
64300 52600 64300 57700 10 line
64300 57700 62500 57700 10 line
62500 57700 62500 52600 10 line
gsave
false false false false 208.000000 [(VSS \(GND\)) ] 0 62575 57400 111.111115 text
grestore
62500 57400 62200 57400 10 line
gsave
false false false false 208.000000 [(1) ] 0 62336 57450 111.111115 text
grestore
gsave
false false false false 208.000000 [(VDD \(VCC\)) ] 0 62575 57100 111.111115 text
grestore
62500 57100 62200 57100 10 line
gsave
false false false false 208.000000 [(2) ] 0 62296 57150 111.111115 text
grestore
gsave
false false false false 208.000000 [(V0) ] 0 62575 56800 111.111115 text
grestore
62500 56800 62200 56800 10 line
gsave
false false false false 208.000000 [(3) ] 0 62320 56850 111.111115 text
grestore
gsave
false false false false 208.000000 [(RS) ] 0 62575 56500 111.111115 text
grestore
62500 56500 62200 56500 10 line
gsave
false false false false 208.000000 [(4) ] 0 62296 56550 111.111115 text
grestore
gsave
false false false false 208.000000 [(R/W) ] 0 62575 56200 111.111115 text
grestore
62500 56200 62200 56200 10 line
gsave
false false false false 208.000000 [(5) ] 0 62320 56250 111.111115 text
grestore
gsave
false false false false 208.000000 [(E) ] 0 62575 55900 111.111115 text
grestore
62500 55900 62200 55900 10 line
gsave
false false false false 208.000000 [(6) ] 0 62304 55950 111.111115 text
grestore
gsave
false false false false 208.000000 [(DB0) ] 0 62550 55600 111.111115 text
grestore
62500 55600 62200 55600 10 line
gsave
false false false false 208.000000 [(7) ] 0 62320 55650 111.111115 text
grestore
gsave
false false false false 208.000000 [(DB1) ] 0 62550 55300 111.111115 text
grestore
62500 55300 62200 55300 10 line
gsave
false false false false 208.000000 [(8) ] 0 62312 55350 111.111115 text
grestore
gsave
false false false false 208.000000 [(DB2) ] 0 62550 55000 111.111115 text
grestore
62500 55000 62200 55000 10 line
gsave
false false false false 208.000000 [(9) ] 0 62296 55050 111.111115 text
grestore
gsave
false false false false 208.000000 [(DB3) ] 0 62550 54700 111.111115 text
grestore
62200 54700 62500 54700 10 line
gsave
false false false false 208.000000 [(10) ] 0 62300 54750 111.111115 text
grestore
gsave
false false false false 208.000000 [(DB4) ] 0 62550 54400 111.111115 text
grestore
62200 54400 62500 54400 10 line
gsave
false false false false 208.000000 [(11) ] 0 62300 54450 111.111115 text
grestore
gsave
false false false false 208.000000 [(DB5) ] 0 62550 54100 111.111115 text
grestore
62200 54100 62500 54100 10 line
gsave
false false false false 208.000000 [(12) ] 0 62300 54150 111.111115 text
grestore
gsave
false false false false 208.000000 [(DB6) ] 0 62550 53800 111.111115 text
grestore
62200 53800 62500 53800 10 line
gsave
false false false false 208.000000 [(13) ] 0 62300 53850 111.111115 text
grestore
gsave
false false false false 208.000000 [(DB7) ] 0 62550 53500 111.111115 text
grestore
62200 53500 62500 53500 10 line
gsave
false false false false 208.000000 [(14) ] 0 62300 53550 111.111115 text
grestore
gsave
false false false false 208.000000 [(A ) ] 0 62550 53200 111.111115 text
grestore
62200 53200 62500 53200 10 line
gsave
false false false false 208.000000 [(15) ] 0 62300 53250 111.111115 text
grestore
gsave
false false false false 208.000000 [(K) ] 0 62550 52900 111.111115 text
grestore
62200 52900 62500 52900 10 line
gsave
false false false false 208.000000 [(16) ] 0 62300 52950 111.111115 text
grestore
63400 52800 64100 52800 10 line
64100 52800 64100 57500 10 line
64100 57500 63400 57500 10 line
63400 57500 63400 52800 10 line
62700 56350 62900 56350 10 line
gsave
false false false false 390.000000 [(LCD) ] 0 63500 55200 208.333328 text
grestore
gsave
56300 58150 50 0 360 10 darc
56300 58100 56300 57800 10 line
gsave
false false false false 260.000000 [(Vcc) ] 0 56100 58250 138.888885 text
grestore
grestore
57100 55800 56800 55800 10 line
56800 55800 56800 55400 10 line
gsave
60800 52500 60800 52650 10 line
60800 53400 60800 53248 10 line
60700 52650 60900 52650 10 line
60900 52650 60900 53250 10 line
60900 53250 60700 53250 10 line
60700 53250 60700 52650 10 line
grestore
gsave
false false false true 260.000000 [(22K) ] 0 60900 53000 138.888885 text
grestore
60100 53400 60600 53400 10 line
56300 52500 60800 52500 10 line
60800 53400 60800 55800 10 line
58000 54350 58000 55000 10 line
58000 53450 58000 53400 10 line
gsave
57200 52800 57600 52800 10 line
57400 53100 57600 52800 10 line
57400 53100 57200 52800 10 line
57200 53100 57600 53100 10 line
57400 53400 57400 53200 10 line
57400 52700 57400 52500 10 line
57400 53200 57400 53100 10 line
57400 52800 57400 52700 10 line
57200 53100 57200 53000 10 line
57600 53100 57600 53200 10 line
newpath
57400 52500
30
0 360 arc
fill
newpath
57400 52500
30
0 360 arc
fill
grestore
gsave
false true false true 260.000000 [(3V6) ] 0 57400 53300 138.888885 text
grestore
gsave
56600 52800 57000 52800 10 line
56800 53100 57000 52800 10 line
56800 53100 56600 52800 10 line
56600 53100 57000 53100 10 line
56800 53400 56800 53200 10 line
56800 52700 56800 52500 10 line
56800 53200 56800 53100 10 line
56800 52800 56800 52700 10 line
56600 53100 56600 53000 10 line
57000 53100 57000 53200 10 line
newpath
56800 52500
30
0 360 arc
fill
newpath
56800 52500
30
0 360 arc
fill
grestore
gsave
false true false true 260.000000 [(3V6) ] 0 56800 53300 138.888885 text
grestore
56800 53400 56800 55400 10 line
57400 53400 57400 55100 10 line
56300 55100 57400 55100 10 line
58100 55000 58000 55000 10 line
56300 54800 56500 54800 10 line
56300 57800 56300 55700 10 line
56800 56900 56300 56900 10 line
57300 57000 57300 56600 10 line
57300 56600 57900 56600 10 line
57900 54600 57900 56600 10 line
57900 54600 58100 54600 10 line
58000 56200 58100 56200 10 line
58000 55800 58100 55800 10 line
58000 55400 58100 55400 10 line
56800 56000 56500 56000 10 line
56500 57000 56500 54800 10 line
56300 54800 56300 52500 10 line
56800 57000 56800 56900 10 line
57000 56200 57100 56200 10 line
gsave
61400 58100 61400 57900 10 line
61400 57400 61400 57200 10 line
61700 57600 61900 57600 10 line
61300 57400 61500 57400 10 line
61500 57400 61500 57900 10 line
61500 57900 61300 57900 10 line
61300 57900 61300 57400 10 line
61700 57600 61500 57600 10 line
61500 57600 61600 57650 10 line
61500 57600 61600 57550 10 line
grestore
gsave
false true false true 260.000000 [(10K) ] 0 61250 57700 138.888885 text
grestore
gsave
62100 58150 50 0 360 10 darc
62100 58100 62100 57800 10 line
gsave
false false false false 260.000000 [(Vcc) ] 0 61900 58250 138.888885 text
grestore
grestore
gsave
61700 57000 61700 57200 10 line
61600 57000 61800 57000 10 line
61655 56950 61745 56950 10 line
61680 56910 61720 56910 10 line
grestore
61700 57200 61700 57400 10 line
61700 57400 62200 57400 10 line
61900 57600 61900 56800 10 line
61900 56800 62200 56800 10 line
62100 57800 62100 57100 10 line
62100 57100 62200 57100 10 line
61400 57200 61700 57200 10 line
61400 58100 61700 58100 10 line
61700 58100 61700 57800 10 line
61700 57800 62100 57800 10 line
gsave
56800 56900 56800 56700 10 line
gsave
false false false false 208.000000 [(1) ] 90 56750 56750 111.111115 text
grestore
56800 56000 56800 56200 10 line
gsave
false true false false 208.000000 [(2) ] 90 56750 56150 111.111115 text
grestore
56600 56350 57000 56350 10 line
56800 56200 56800 56350 10 line
56800 56550 56800 56700 10 line
56600 56661 56700 56661 10 line
56651 56610 56651 56710 10 line
56600 56450 57000 56450 10 line
57000 56450 57000 56550 10 line
57000 56550 56600 56550 10 line
56600 56550 56600 56450 10 line
grestore
gsave
false true false false 260.000000 [(1uF) ] 0 57100 56200 138.888885 text
grestore
newpath
57000 55100
30
0 360 arc
fill
newpath
57000 55100
30
0 360 arc
fill
newpath
58700 53400
30
0 360 arc
fill
newpath
59400 53400
30
0 360 arc
fill
newpath
60100 52500
30
0 360 arc
fill
newpath
60100 52500
30
0 360 arc
fill
newpath
59400 52500
30
0 360 arc
fill
newpath
59400 52500
30
0 360 arc
fill
newpath
58700 52500
30
0 360 arc
fill
newpath
58700 52500
30
0 360 arc
fill
newpath
58000 52500
30
0 360 arc
fill
newpath
58000 52500
30
0 360 arc
fill
newpath
60800 53500
30
0 360 arc
fill
newpath
60800 53500
30
0 360 arc
fill
newpath
56800 55400
30
0 360 arc
fill
newpath
56800 55400
30
0 360 arc
fill
newpath
60100 53400
30
0 360 arc
fill
newpath
56800 55400
30
0 360 arc
fill
newpath
56800 55400
30
0 360 arc
fill
newpath
60100 53400
30
0 360 arc
fill
newpath
56300 52500
30
0 360 arc
fill
newpath
60100 52500
30
0 360 arc
fill
newpath
59400 52500
30
0 360 arc
fill
newpath
58700 52500
30
0 360 arc
fill
newpath
58000 52500
30
0 360 arc
fill
newpath
57400 52500
30
0 360 arc
fill
newpath
56800 52500
30
0 360 arc
fill
newpath
60800 53500
30
0 360 arc
fill
newpath
57400 52500
30
0 360 arc
fill
newpath
57400 52500
30
0 360 arc
fill
newpath
56800 52500
30
0 360 arc
fill
newpath
56800 52500
30
0 360 arc
fill
newpath
56800 55400
30
0 360 arc
fill
newpath
56800 55400
30
0 360 arc
fill
newpath
57000 55100
30
0 360 arc
fill
newpath
56300 54800
30
0 360 arc
fill
newpath
56300 56900
30
0 360 arc
fill
newpath
56800 56900
30
0 360 arc
fill
newpath
56300 56900
30
0 360 arc
fill
newpath
56300 56900
30
0 360 arc
fill
newpath
56500 56000
30
0 360 arc
fill
newpath
56500 56000
30
0 360 arc
fill
newpath
56500 56000
30
0 360 arc
fill
newpath
56300 54800
30
0 360 arc
fill
newpath
56300 52500
30
0 360 arc
fill
newpath
56800 56900
30
0 360 arc
fill
newpath
61700 57200
30
0 360 arc
fill
newpath
62100 57800
30
0 360 arc
fill
newpath
61700 57200
30
0 360 arc
fill
newpath
62100 57800
30
0 360 arc
fill
showpage
%%End
